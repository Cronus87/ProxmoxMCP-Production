version: '3.8'

services:
  mcp-server:
    image: ghcr.io/your-username/fullproxmoxmcp:${IMAGE_TAG:-latest}
    container_name: proxmox-mcp-server
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8080
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # Proxmox configuration from environment
      - SSH_TARGET=${SSH_TARGET}
      - SSH_HOST=${SSH_HOST}
      - SSH_USER=${SSH_USER}
      - SSH_PORT=${SSH_PORT:-22}
      - SSH_KEY_PATH=/app/keys/ssh_key
      - PROXMOX_HOST=${PROXMOX_HOST}
      - PROXMOX_USER=${PROXMOX_USER}
      - PROXMOX_TOKEN_NAME=${PROXMOX_TOKEN_NAME}
      - PROXMOX_TOKEN_VALUE=${PROXMOX_TOKEN_VALUE}
      - PROXMOX_VERIFY_SSL=${PROXMOX_VERIFY_SSL:-false}
      - ENABLE_PROXMOX_API=${ENABLE_PROXMOX_API:-true}
      - ENABLE_DANGEROUS_COMMANDS=${ENABLE_DANGEROUS_COMMANDS:-false}
    volumes:
      - mcp_logs:/app/logs
      - /opt/proxmox-mcp/keys:/app/keys:ro
      - /opt/proxmox-mcp/config:/app/config:ro
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  caddy:
    image: caddy:2-alpine
    container_name: mcp-reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/proxmox-mcp/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - mcp-network
    depends_on:
      mcp-server:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Optional: Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-prometheus
    restart: unless-stopped
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - /opt/proxmox-mcp/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - mcp-network
    profiles:
      - monitoring

  # Optional: Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: mcp-grafana
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - /opt/proxmox-mcp/monitoring/grafana:/etc/grafana/provisioning
    networks:
      - mcp-network
    profiles:
      - monitoring

networks:
  mcp-network:
    driver: bridge
    name: mcp-network

volumes:
  mcp_logs:
    name: mcp_logs
  caddy_data:
    name: caddy_data
  caddy_config:
    name: caddy_config
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data